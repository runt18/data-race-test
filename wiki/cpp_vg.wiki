#summary cpp_vg - an attempt to integrate C++/STL into valgrind

= Introduction =

We took valgrind sources and made few changes to make it possible to use C++ and STL in valgrind tools. <BR>

We added two different implementations of STL: one from g++ distribution, and one from www.stlport.org. We will have to choose one, of course. 

= How to try = 
Checkout: 
{{{
svn checkout http://data-race-test.googlecode.com/svn/trunk/cpp_vg cpp_vg
cd cpp_vg
}}}

Choose STL: edit the file `cppgrind/Makefile.am`. <br>
One option is libstdc++-v3 (requires compilation of .cc files). <br>
Alternative stl is stlport (header files only). 

Build:
{{{
./autogen.sh
./configure --prefix=`pwd`/Inst
make -j 
}}}

Run the cppgrind tool on any binary. This will run some STL-ish tests (including some for the heap profiler): 
{{{
./vg-in-place --profile-heap=yes -q  --tool=cppgrind ls /dev/null
}}}

Look at the code: 
  * cppgrind/cp_main.cc -- an example of C++ tool with stl. Includes tests for heap profiler.
  * coregrind/m_cplusplus_support.cc -- definitions of `operator new`, etc
  * include/pub_tool_cplusplus.h -- currently, just the support for heap profiler


= Files that were changed: =
{{{
# all files 
% svn diff -r 616  | grep '^Index:'
# non-stl files: 
% svn diff -r 616  | grep '^Index:' | grep -v 'include/stlport\|include/m_stl\|coregrind/m_stl'
}}}

= Versions =
  # valgrind trunk rev 8843, VEX rev 1878
  # added libstdc++-v3 (gcc-4.3.2):
    * gcc-4.3.2/libstdc++-v3/include/ to include/m_stl
    * gcc-4.3.2/libstdc++-v3/src/ to coregrind/m_stl/src
  # added stlport (TODO(timurrrr): which version?)
  # added cppgrind - a simple C++/STL/Valgrind integration test


= TODOs =
  # copyrights in coregrind/m_stl/symbols.cc and cppgrind/cp_main.cc
  # more .cc's in coregrind/Makefile.am