#summary Data race detection algorithm used by ThreadSanitizer.

*UNDER CONSTRUCTION!*

=Definitions=

*Tid* (thread id): a unique number identifying a thread of the running program.

*Addr* (address):  a pointer to the memory of the running program (a 64-bit number on a 64-bit system).

*Event-Type*: one of  `Read`, `Write` (memory access events),
`Wrlock`, `Rdlock`, `Wrunlock`, `Rdunlock` (locking events),
`Signal`, `Wait` (happens-before events).

*Event*: a triple `{Event-Type, Tid, Addr}`. 
We will write `Event-Type(Tid,Addr)` or `Event-Type(Addr)` if `Tid` is obvious from the context.

*Lock*: an  address that appeared in a locking event. <BR>
A lock `L` is *wr-held* by a thread `T` at a given point of time if the number of events
`Wrlock(T,L)` observed so far is greater than the number of events `Wrunlock(T,L)`. <BR>
A lock `L` is *rd-held* by thread `T` if it is wr-held by `T` or if the
number of events `Rdlock(T,L)` is greter than the number of events `Rdunlock(T,L)`.

*Lock Set*: (`LS`) a set of locks. <BR>
*Writer Lock Set* (`LSwr`): the set of all wr-held locks of a given thread. <BR>
*Reader Lock Set* (`LSrd`): the set of all rd-held locks of a given thread. <BR>
*Event Lock Set*:  `LSwr` for a `Write` event and `LSrd` for a `Read` event.


*Happens-before arc*: a pair of events X=`Signal(Tx,Ax)` and Y=`Wait(Ty,Ay)`
`Ax`=`Ay`, `Tx` != `Ty` and X is observed first.



=State machine=

=Pure happens-before mode= 

=Fast mode=

=Implementation details=